"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'adkq6k55(48+&k&a1*^jft=u_cf$@el@6(@x+1fvl^e@+xc2$7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [

    # no models
    'usermanagement.apps.UsermanagementConfig',

    # models
    'dashboard.apps.DashboardConfig',
    'systemconfig.apps.SystemconfigConfig',
    'utils.apps.UtilsConfig',

    # 'import_export',
    'rest_framework',
    'fcm_django',
    'rest_framework.authtoken',
    'corsheaders',
    # https://stackoverflow.com/a/12058684/2351696
    'django_cleanup.apps.CleanupConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_seed',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Custom Middleware for checking URL Permissions
    'dashboard.middleware.CustomMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    # 'default': {
    #    'ENGINE': 'django.db.backends.sqlite3',
    #    'NAME': os.path.join(BASE_DIR, 'media','db.sqlite3'),
    # }
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'pyflux-django-backend',
        'USER': 'postgres',
        'PASSWORD': 'root',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata' #'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# IMPORT_EXPORT_USE_TRANSACTIONS = True
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# CORS_ORIGIN_WHITELIST = (
#     'localhost:4200',
# )
CORS_ORIGIN_ALLOW_ALL = True

REST_FRAMEWORK = {
    # 'DATE_FORMAT': "%d/%m/%Y", # format returned by API
    # 'DATE_INPUT_FORMATS': [("%d/%m/%Y"),'%a %b %d %Y %H:%M:%S %Z', 'iso-8601'], # list of formats accepted by API
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    # "DATE_INPUT_FORMATS": ["%d/%m/%Y"],
}
FCM_DJANGO_SETTINGS = {
   "FCM_SERVER_KEY": "AAAAZ8Hvw3Y:APA91bHI_ZGAq6elU06hak0SRapgqTMcsaIS0Jo5_p61BXT-b6kJAAZNyNbX3o670B8OGHnOaFmcXxEvamE0Y1CEDyRs6PqLK5Fm6QNa-Gb3MlxUGe6t2NVOJXJfAtl1YRwajGXH-LpT"
 }

AUTH_USER_MODEL = 'dashboard.Users'

# ON_DIGITALOCEAN = False
# if ON_DIGITALOCEAN == True:
#     ALLOWED_HOSTS = ['api.helpservice.xyz']
#     '''
#     create a directory 'static' at /var/www/.
#     edit file -> /etc/apache2/sites-enabled/static.conf
#     <VirtualHost *:80>
#         ServerName static.helpservice.xyz
#         DocumentRoot /var/www/static
#     </VirtualHost>
#     '''
#     STATIC_URL = 'https://static.helpservice.xyz/api/'
#     STATIC_ROOT = '/var/www/static/api/'


# BROKER_URL = 'amqp://guest:guest@localhost:5672/'

# INSTALLED_APPS += ('kombu.transport.django', )
#
# BROKER_URL = 'django://'

# logging example: https://stackoverflow.com/a/7045981
# log file by date: https://stackoverflow.com/a/34006023/2351696
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(BASE_DIR,'logs', 'l.log'),
            'when': 'D', # this specifies the interval
            'interval': 1, # defaults to 1, only necessary for other values 
            'backupCount': 10, # how many backup file to keep, 10 days
            'formatter': 'standard',
        },
        'console':{
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'standard',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console','file'],
            'propagate': True,
        },
        
    },
}
